import{_ as r,c as o,j as e,a as t,o as s}from"./chunks/framework.DWgfsjy0.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"GeoDataFrames.jl","tagline":"Simple geographical vector data interaction","image":{"src":"assets/julia-dots-table.svg","alt":"GeoDataFrames"},"actions":[{"theme":"brand","text":"Get Started","link":"/tutorials/installation.md"},{"theme":"alt","text":"View on Github","link":"https://github.com/evetion/GeoDataFrames.jl"},{"theme":"alt","text":"API Reference","link":"/reference/api"}]},"features":[{"title":"Reading and writing","details":"Defines common methods for reading, writing and manipulating geospatial vector data, as one-liners, and as fast as possible.","link":"/tutorials/usage"},{"title":"Supported data formats","details":"Works out of the box with Shapefiles, GeoPackages, GeoJSON, and more recent formats as GeoParquet and GeoArrow. It uses native Julia drivers where possible.","link":"/background/formats"},{"title":"Seamless integration","details":"GeoDataFrames.jl is fully compatible with the Tables.jl and GeoInterface.jl ecosystems. This enables plotting, operations and analysis using the full power of the Julia ecosystem."}]},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}'),n={name:"index.md"};function i(l,a,d,p,m,c){return s(),o("div",null,a[0]||(a[0]=[e("p",null,[t("Simple geographical vector interaction built on top of "),e("a",{href:"https://github.com/yeesian/ArchGDAL.jl/",target:"_blank",rel:"noreferrer"},"ArchGDAL"),t(". Inspiration taken from "),e("a",{href:"https://geopandas.org",target:"_blank",rel:"noreferrer"},"geopandas"),t(". See "),e("a",{href:"https://rafaqz.github.io/Rasters.jl/",target:"_blank",rel:"noreferrer"},"Rasters.jl"),t(" for raster data interaction, and "),e("a",{href:"https://juliageo.org/GeometryOps.jl",target:"_blank",rel:"noreferrer"},"GeometryOps.jl"),t(" for further geometry operations.")],-1)]))}const g=r(n,[["render",i]]);export{h as __pageData,g as default};
